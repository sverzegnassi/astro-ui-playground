---
import type { HTMLAttributes } from "astro/types";
import { clx, type CommonProps } from "./common";

type StyleProps = {
  color?: "primary" | "secondary" | "tertiary" | "brand" | "success" | "error" | "warning" | "info";
} & CommonProps;

type Props = StyleProps &
  (
    | ({ as: "button" } & HTMLAttributes<"button">)
    | ({ as: "anchor" } & HTMLAttributes<"a">)
    | ({ as: "input" } & HTMLAttributes<"input">)
  );

const { class: className, color = "default", as = "button", ...attrs } = Astro.props;

const styleClassList = ["btn", color, className];
---

{
  as === "button" && (
    <button class:list={styleClassList} {...attrs}>
      <slot />
    </button>
  )
}

{
  as === "anchor" && (
    <a class:list={styleClassList} {...attrs}>
      <slot />
    </a>
  )
}

{
  as === "input" && (
    <>
      <input class:list={styleClassList} {...attrs} />
      <slot />
    </>
  )
}

<style>
  .btn {
    @apply flex items-center justify-center;
    @apply px-8 py-4 gap-1;
    @apply font-semibold;
    @apply bg-neutral-800 text-neutral-100;
    @apply rounded-full;
  }

  .btn:hover {
    @apply brightness-150;
  }
  .btn:active {
    @apply scale-95;
  }

  .btn.secondary {
    @apply bg-neutral-300 text-neutral-900;
  }

  .btn.tertiary {
    @apply bg-transparent text-link-900;
  }

  .btn.success {
    @apply bg-success-700 text-success-300;
  }

  .btn.error {
    @apply bg-error-700 text-error-300;
  }

  .btn.warning {
    @apply bg-warning-700 text-warning-300;
  }

  .btn.info {
    @apply bg-info-700 text-info-300;
  }
</style>
