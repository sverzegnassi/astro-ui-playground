---
import type { HTMLAttributes } from "astro/types";
import { parse } from "node-html-parser";

type Props = {
  name: string;
} & (
  | { size?: "16"; style?: "solid" }
  | { size?: "20"; style?: "solid" }
  | { size?: "24"; style?: "solid" | "outline" }
) &
  HTMLAttributes<"svg">;

export async function importIcon(size: string, style: string, name: string) {
  const icon = await import(`../assets/heroicons/optimized/${size}/${style}/${name}.svg?raw`);
  return icon.default;
}

const { size = "24", style = "outline", name, ...attrs } = Astro.props;

const raw = await importIcon(size, style, name);

const svg = parse(raw).querySelector("svg");
Object.keys(attrs)
  .filter((k) => k == "class" || k.startsWith("data-") || k.startsWith("aria-") || k.startsWith("x-") )
  .forEach((k) => {
    svg?.setAttribute(k, attrs[k] as string);
  });
---

<Fragment set:html={svg} />
